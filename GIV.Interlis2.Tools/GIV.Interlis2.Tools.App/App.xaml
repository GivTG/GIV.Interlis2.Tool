<Application x:Class="GIV.Interlis2.Tools.App.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GIV.Interlis2.Tools.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Window HEADER - Color, Buttons and Text -->
            <Color x:Key="GIVMainWindowTitelBarFontColor">#FFFFFFFF</Color>
            <Color x:Key="GIVMainWindowStyleBorderColor">#FFD02021</Color>
            <Color x:Key="GIVMainWindowStyleShadowColor">#FF919191</Color>
            <Color x:Key="GIVWindowButtonOnMouseOverColor">#FFDE7D7D</Color>
            <Color x:Key="GIVWindowCloseButtonOnMouseOverColor">Red</Color>
            <Color x:Key="GIVWindowButtonOnClickColor">#FFD02021</Color>

            <Color x:Key="GIVBtnDefaultColor">#FFFFFFFF</Color>
            <Color x:Key="GIVWindowBtnActiveColor">#FFFFFFFF</Color>
            <Color x:Key="GIVBtnFontColor">#FF838383</Color>
            <Color x:Key="GIVDetailsHintLabelColor">#FF838383</Color>
            <Color x:Key="GIVDetailsTitleLabelColor">#FFD02021</Color>
            <Color x:Key="GIVDetailsTitleBackgroundColor">#FFCDCDCD</Color>

            <SolidColorBrush x:Key="WindowButtonOnMouseOverBrush" Color="{StaticResource GIVWindowButtonOnMouseOverColor}" />
            <SolidColorBrush x:Key="WindowButtonOnClickBrush" Color="{StaticResource GIVWindowButtonOnClickColor}" />

            <SolidColorBrush x:Key="GIVDetailsTitleLabelColorBrush" Color="#FFD02021" />


            <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid>
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                        <ResizeGrip x:Name="WindowResizeGrip"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    IsTabStop="false"
                                    Visibility="Collapsed" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                            <Condition Property="WindowState" Value="Normal" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="GIVMainWindowStyle" TargetType="{x:Type Window}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border Margin="2,2,2,5"
                                    Background="White"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True"
                                    UseLayoutRounding="True">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource GIVMainWindowStyleBorderColor}" />
                                </Border.BorderBrush>
                                <AdornerDecorator UseLayoutRounding="True">
                                    <ContentPresenter />
                                </AdornerDecorator>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                        <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

            <!-- Close Button on Windows -->
            <Style x:Key="MainWindowTitleBarButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true" />
                                <Trigger Property="IsDefault" Value="False" />
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource WindowButtonOnMouseOverBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource WindowButtonOnMouseOverBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource WindowButtonOnClickBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource WindowButtonOnClickBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource WindowButtonOnMouseOverBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource WindowButtonOnMouseOverBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GIVMainWindowStyleBorderColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GIVMainWindowStyleBorderColor}" />
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NavigationPanelButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Height="25"
                                    Margin="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="0,2,0,0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="10,1,1,1"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#FFFF1D1D" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFFF1D1D" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#FFFF1D1D" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFFF1D1D" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false" />
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SettingWindowTitleBarButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource GIVMainWindowStyleBorderColor}" />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource GIVMainWindowStyleBorderColor}" />
                                </Border.Background>
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true" />
                                <Trigger Property="IsDefault" Value="False" />
                                <Trigger Property="IsMouseOver" Value="true" />
                                <Trigger Property="IsPressed" Value="true" />
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GIVMainWindowStyleBorderColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GIVMainWindowStyleShadowColor}" />
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="GIVViewTitleLabel" TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="18.667" />
                <Setter Property="Foreground" Value="{DynamicResource GIVDetailsTitleLabelColorBrush}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontWeight" Value="Bold" />
            </Style>
            <Style x:Key="GIVDetailsHintLabel" TargetType="{x:Type Label}">
                <Setter Property="FontStyle" Value="Italic" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GIVDetailsHintLabelColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize" Value="10.667" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
